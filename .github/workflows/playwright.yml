name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  pre-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit (temporary safe mode)
        run: npm audit || echo "Ignoring known xlsx vulnerability until fix released."

      - name: Run ESLint
        run: npm run lint
        continue-on-error: false

      - name: Run Prettier check
        run: npm run format:check
        continue-on-error: false

  select-tests:
    needs: pre-checks
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.select-tests.outputs.tests }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Select changed tests
        id: select-tests
        run: |
          TESTS=$(npx framework select-tests origin/main HEAD | jq -R -s -c 'split("\n")[:-1]')
          echo "tests=$TESTS" >> $GITHUB_OUTPUT

  test:
    needs: [pre-checks, select-tests]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        environment: [development, qa, uat, prod]
        shard: ['1/3', '2/3', '3/3']
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Clean install dependencies
        run: rm -rf node_modules && npm ci

      - name: Install dotenv-cli
        run: npm install -g dotenv-cli

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Quarantine flaky tests
        run: dotenv -e .env -- npx framework quarantine-flaky

      - name: Run Playwright tests
        run: dotenv -e .env -- npx framework run --tags "@smoke or @regression or @api or @ui or @flaky or @e2e or @sanity" --project=${{ matrix.browser }} --shard=${{ matrix.shard }} ${{ needs.select-tests.outputs.tests }}

      - name: Generate Allure report
        if: always()
        run: dotenv -e .env -- npx framework generate-report

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ matrix.browser }}-${{ matrix.environment }}-${{ matrix.shard }}
          path: reports/allure-report/

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-html-report-${{ matrix.browser }}-${{ matrix.environment }}-${{ matrix.shard }}
          path: playwright-report/

      - name: Upload Screenshots and Traces
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: traces-and-screenshots-${{ matrix.browser }}-${{ matrix.environment }}-${{ matrix.shard }}
          path: |
            test-results/
            reports/traces/
            screenshots/

      - name: Notify Slack on failure
        if: failure()
        run: |
          dotenv -e .env -- npx framework notify $SLACK_WEBHOOK_URL "Playwright tests failed for ${{ matrix.browser }} in ${{ matrix.environment }} environment (shard ${{ matrix.shard }}). Check run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: Push results to Xray
        if: always()
        run: dotenv -e .env -- npx framework push-to-xray "TEST_EXEC-${{ matrix.browser }}-${{ matrix.environment }}-${{ github.run_id }}"
