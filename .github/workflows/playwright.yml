name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  schedule:
    - cron: '0 0 * * *'  # Daily midnight run

jobs:
  test:
    name: 'Playwright Tests'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        environment: [development, qa, uat, prod]
        shard: [1/3, 2/3, 3/3]  # Sharding for parallel execution

    env:
      NODE_ENV: ${{ matrix.environment }}
      JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
      JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
      JIRA_USERNAME: ${{ secrets.JIRA_USERNAME }}
      JIRA_PROJECT_KEY: ${{ secrets.JIRA_PROJECT_KEY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Security audit
        run: npm audit
        continue-on-error: true

      - name: Verify code style
        run: |
          npm run lint
          npm run format:check
        continue-on-error: true

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Run Playwright tests
        run: npx playwright test --project=${{ matrix.browser }} --grep @smoke --shard=${{ matrix.shard }}

      - name: Generate Allure report
        if: always()
        run: npx allure generate ./allure-results --clean -o allure-report

      - name: Push results to Xray
        if: always()
        run: |
          node src/utils/xray/xrayUtils.js push-to-xray
        env:
          TEST_EXECUTION_KEY: "TEST_EXEC-${{ matrix.browser }}-${{ matrix.environment }}-${{ github.run_id }}"

      - name: Upload Allure report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-report-${{ matrix.browser }}-${{ matrix.environment }}-${{ matrix.shard }}
          path: allure-report/
          retention-days: 30

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-results-${{ matrix.browser }}-${{ matrix.environment }}-${{ matrix.shard }}
          path: |
            test-results/
            playwright-report/
            reports/traces/
          retention-days: 30

      - name: Notify Slack on failure
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "‚ùå Playwright tests failed for ${{ matrix.browser }} in ${{ matrix.environment }} environment (shard ${{ matrix.shard }})! See ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }' ${{ secrets.SLACK_WEBHOOK_URL }}