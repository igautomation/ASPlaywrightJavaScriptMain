# .github/workflows/playwright.yml

name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * *'  # Daily midnight run

jobs:
  
  # Pre-checks: Lint, Audit, Format
  pre-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit (temporary safe mode)
        run: npm audit || echo "Ignoring known xlsx vulnerability until fix released."

      - name: Run ESLint (strict)
        run: npm run lint
        continue-on-error: false

      - name: Run Prettier check (strict)
        run: npm run format:check
        continue-on-error: false

  # Select affected tests using Git diff
  select-tests:
    needs: pre-checks
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.select-tests.outputs.tests }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Select changed tests
        id: select-tests
        run: |
          TESTS=$(npx framework select-tests origin/main HEAD | jq -R -s -c 'split("\n")[:-1]')
          echo "tests=$TESTS" >> $GITHUB_OUTPUT

  # Main Playwright Test Execution
  test:
    needs: [ pre-checks, select-tests ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [ chromium, firefox, webkit ]
        environment: [ development, qa, uat, prod ]
        shard: [ "1/3", "2/3", "3/3" ]
    env:
      NODE_ENV: ${{ matrix.environment }}
      BASE_URL: ${{ secrets.BASE_URL }}
      API_KEY: ${{ secrets.API_KEY }}
      OAUTH2_TOKEN: ${{ secrets.OAUTH2_TOKEN }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
      XRAY_CLIENT_ID: ${{ secrets.XRAY_CLIENT_ID }}
      XRAY_CLIENT_SECRET: ${{ secrets.XRAY_CLIENT_SECRET }}
      TEST_EXECUTION_KEY: "TEST_EXEC-${{ matrix.browser }}-${{ matrix.environment }}-${{ github.run_id }}"
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Cache Playwright Browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Quarantine flaky tests
        run: npx framework quarantine-flaky

      - name: Run Playwright tests
        run: npx framework run --tags "@smoke and not @flaky" --project=${{ matrix.browser }} --shard=${{ matrix.shard }} ${{ needs.select-tests.outputs.tests }}

      # Report Generation
      - name: Generate Allure report
        if: always()
        run: npx framework generate-report

      # Upload Reports and Artifacts
      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-report-${{ matrix.browser }}-${{ matrix.environment }}-${{ matrix.shard }}
          path: reports/allure-report/

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-html-report-${{ matrix.browser }}-${{ matrix.environment }}-${{ matrix.shard }}
          path: playwright-report/

      - name: Upload Screenshots and Traces
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: traces-and-screenshots-${{ matrix.browser }}-${{ matrix.environment }}-${{ matrix.shard }}
          path: |
            test-results/
            reports/traces/
            screenshots/

      # Slack Notification on Failure
      - name: Notify Slack on failure
        if: failure()
        run: |
          npx framework notify ${{ secrets.SLACK_WEBHOOK_URL }} \
          "‚ùå Playwright tests failed for ${{ matrix.browser }} in ${{ matrix.environment }} environment (shard ${{ matrix.shard}}). Check run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      # Push Results to Xray
      - name: Push results to Xray
        if: always()
        run: npx framework push-to-xray "TEST_EXEC-${{ matrix.browser }}-${{ matrix.environment }}-${{ github.run_id }}"